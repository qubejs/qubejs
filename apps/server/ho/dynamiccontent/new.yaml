title: Create Form
template: apps/core/templates/page
className: 
contentBodyClass: container container-form
layout: apps/layouts/spa
containerTemplate: Dashboard
reset:
  type: clearAll
hook:
  load:
    - url: /api/v1/dynamic/form/Type
      method: get
      dataKey: metaType
      params:
        formType: .formType
init:
  drop_options:
    contentType: ::globals.options::contentType
  page: 
    title: .current.pageData.title
items:
    - component: Progress
      className: tp-progress--active
      match:
        isSubmitting:
          validators:
            - type: equals
              matchValue: true

    - component: Form
      className: mt-wide
      name: page
      fields:
        - name: title
          label: Title
          validators:
            - type: required
        - name: type
          label: Content Type
          cmpType: Select
          inject:
            options: drop_options.contentType
          validators:
            - type: required
        - name: formType
          label: Form Type
          cmpType: Autocomplete
          multiple: true
          textField: name
          valueField: code
          inject:
            options: metaType.formType
          validators:
            - type: required
            - type: arrayLength
              exact: 1
              message: Only 1 form type is allowed
        - name: path
          label: Path
          mask:
            type: appendText
            text: /pages/dynamic/
          validators:
            - type: required
              defaultValue: /pages/dynamic/
            - type: path
            - type: startsWith
              startsWith: /pages/dynamic/

    - component: Button
      size: large
      buttonText: Create
      actionType: submit
      inject:
        disabled: isSubmitting
      url: /api/v1/dynamic/form
      method: post
      dataKey: createPage
      defaultResponse:
        success:
          - notification:
              message: Page created succcessfully
            data:
              redirect:
                to: editPage
                urlParams:
                  pageId: .createPage.pageId
                  path: .createPage.path
            match:
              page.type:
                validators:
                  - type: equals
                    matchValue: PAGE
          - notification:
              message: Sitemap created succcessfully
            data:
              redirect:
                to: editSiteMap
                urlParams:
                  pageId: .createPage.pageId
                  path: .createPage.path
            match:
              page.type:
                validators:
                  - type: equals
                    matchValue: SITE_MAP

            
      params:
        pageData:
          title: .page.title
        formType: .page.formType
        pageName: .page.title
        path: .page.path
        type: .page.type